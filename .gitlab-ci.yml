default:
  image: fedora:34

  before_script:
    - >
      dnf install -y
      findutils
      gcc binutils
      cmake extra-cmake-modules
      cxxopts-devel utf8cpp-devel
      spdlog-devel fmt-devel
      gtest-devel gmock-devel
      cppcheck gcovr uncrustify

stages:
  - build
  - test
  - analyze

build-job:
  stage: build
  script:
    - make -C "external/chibi-scheme/" -j PREFIX=/usr && make -C "external/chibi-scheme/" PREFIX=/usr install
    - cmake -B $DEBUG_DIR && make -C $DEBUG_DIR
  artifacts:
    paths:
      - $DEBUG_DIR
    expire_in: 1 hour

test-job:
  stage: test
  cache:
    - key:
      paths:
        - $DEBUG_DIR/
  script:
    - make -C "external/chibi-scheme/" -j PREFIX=/usr && make -C "external/chibi-scheme/" PREFIX=/usr install
    - ctest -VV --test-dir $DEBUG_DIR
  coverage: /^\s*lines:\s*\d+.\d+\%/
  allow_failure: true
  artifacts:
    when: always
    expire_in: 1 week
    reports:
      junit: $DEBUG_DIR/Test*.xml

coverage:
  stage: test
  script:
    - make -C "external/chibi-scheme/" -j PREFIX=/usr && make -C "external/chibi-scheme/" PREFIX=/usr install
    - mkdir -p $COVERAGE_DIR
    - cmake -B $COVERAGE_DIR -DCOVERAGE=ON && make -C $COVERAGE_DIR
    - ctest --test-dir $COVERAGE_DIR || true
    - printf "\n(+ 1 1)\n,quit\n" | ./target/debug/kelyphos || true
    - printf "\n(+ 1 1)\n,quit\n" | ./target/debug/samos -k || true
    - ./target/debug/metaforeas || true
    - ./target/debug/metaforeas -f data/quick_test.scm || true
    - gcovr -f src/ --xml-pretty --exclude-unreachable-branches --print-summary -o coverage.xml
    - gcovr -f src/ --html --html-details --exclude-unreachable-branches --print-summary -o coverage.html
  coverage: /^\s*lines:\s*\d+.\d+\%/
  allow_failure: true
  artifacts:
    when: always
    paths:
      - coverage.xml
      - coverage.html
    name: samos-coverage-${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHA}
    expire_in: 1 week
    reports:
      cobertura: coverage.xml

cppcheck-analysis-job:
  stage: analyze
  script:
    - cppcheck --project=target/debug/compile_commands.json > analysis/cppcheck/cppcheck_results 2>&1
  artifacts:
    paths:
      - analysis/cppcheck
    expire_in: 1 week

style:
  stage: analyze
  script:
    - find src/ -regex '.*/.*\.\(c\|cpp\|h\|hpp\)$' | xargs uncrustify -c uncrustify.cfg --check
  dependencies: []
